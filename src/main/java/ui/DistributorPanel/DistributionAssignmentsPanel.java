/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.DistributorPanel;

import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.DistributionAssignmentRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import ui.GradientPanel;

/**
 *
 * @author ushakeshravya
 */
public class DistributionAssignmentsPanel extends GradientPanel{
     private final JPanel workarea;
     private final EcoSystem system;

    /**
     * Creates new form DistributionAssignmentsPanel
     */
    public DistributionAssignmentsPanel(JPanel workarea, EcoSystem system) {
         super(
            new Color[] {
                new Color(192, 192, 192),   // Silver
                new Color(255, 215, 0),     // Light Gold
                new Color(218, 165, 32)     // Rich Gold
            },
            new float[] { 0f, 0.5f, 1f }
        );
        this.workarea = workarea;
        this.system   = system;
        initComponents();
        populateTable();
        populateManagerCombo();
    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel)tblDistributionAssignments.getModel();
        model.setRowCount(0);
        for (DistributionAssignmentRequest dar : system.getDistributionAssignments()) {
            model.addRow(new Object[]{
                dar.getMovieTitle(),
                dar.getBudget(),
                dar.getStatus(),
                dar.getAssignedManager()==null ? "<unassigned>" : dar.getAssignedManager()
            });
        }
    }
    
    private void populateManagerCombo() {
        cmbPickManager.removeAllItems();
        // assume system.getUserAccountDirectory().getUserList() returns all users
        for (UserAccount ua : system.getUserAccountDirectory().getUserList()) {
            if ("Manager".equals(ua.getRole().toString())) {
                cmbPickManager.addItem(ua.getUsername());
            }
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDistributionAssignments = new javax.swing.JTable();
        lblDistributionAssignments = new javax.swing.JLabel();
        lblPickManager = new javax.swing.JLabel();
        cmbPickManager = new javax.swing.JComboBox<>();
        btnAssign = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        tblDistributionAssignments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie Title", "Budget", "Status", "Manager"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDistributionAssignments);
        if (tblDistributionAssignments.getColumnModel().getColumnCount() > 0) {
            tblDistributionAssignments.getColumnModel().getColumn(0).setResizable(false);
            tblDistributionAssignments.getColumnModel().getColumn(1).setResizable(false);
            tblDistributionAssignments.getColumnModel().getColumn(2).setResizable(false);
            tblDistributionAssignments.getColumnModel().getColumn(3).setResizable(false);
        }

        lblDistributionAssignments.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblDistributionAssignments.setText("Distribution Assignments");

        lblPickManager.setText("Pick Manager :");

        cmbPickManager.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPickManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPickManagerActionPerformed(evt);
            }
        });

        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDistributionAssignments)
                .addGap(139, 139, 139))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(53, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPickManager)
                        .addGap(47, 47, 47)
                        .addComponent(cmbPickManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAssign)
                        .addGap(103, 103, 103))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(lblDistributionAssignments))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnBack)))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPickManager)
                    .addComponent(cmbPickManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAssign))
                .addGap(61, 61, 61))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int row = tblDistributionAssignments.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Select a row.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String manager = (String)cmbPickManager.getSelectedItem();
        DistributionAssignmentRequest dar = system.getDistributionAssignments().get(row);
        dar.setAssignedManager(manager);

        JOptionPane.showMessageDialog(this, "Assigned to “" + manager + "”", "Success", JOptionPane.INFORMATION_MESSAGE);
        populateTable();
    }//GEN-LAST:event_btnAssignActionPerformed

    private void cmbPickManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPickManagerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPickManagerActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workarea.remove(this);
        ((CardLayout) workarea.getLayout()).previous(workarea);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<String> cmbPickManager;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDistributionAssignments;
    private javax.swing.JLabel lblPickManager;
    private javax.swing.JTable tblDistributionAssignments;
    // End of variables declaration//GEN-END:variables
}
