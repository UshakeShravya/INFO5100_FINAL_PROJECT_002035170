/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.ConcessionPanel;

import Business.CartItem;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.ConcessionOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.FoodOrderRequest;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import static java.time.Clock.system;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import ui.GradientPanel;

/**
 *
 * @author ushakeshravyacopy
 */
public class ViewFoodRequestsPanel extends GradientPanel {
    
    private JPanel workarea;
private EcoSystem system;
private UserAccount user;
    /**
     * Creates new form ViewFoodRequestsPanel
     */
    public ViewFoodRequestsPanel(JPanel workarea, EcoSystem system, UserAccount user) {
        super(
            new Color[] {
                new Color(255, 223, 186),   // Light Caramel
                new Color(255, 193, 112),   // Popcorn Gold
                new Color(150, 75, 0)       // Chocolate Brown
            },
            new float[] { 0f, 0.5f, 1f }
        );
        this.workarea = workarea;
    this.system = system;
    this.user = user;
        initComponents();
        populateTable();
    }

private void populateTable() {
    DefaultTableModel model = (DefaultTableModel) tblFoodRequests.getModel();
    model.setRowCount(0);

    for (FoodOrderRequest fr : system.getFoodOrderRequests()) {
        String sender = fr.getSender().getusername();
        String items = fr.getCartItems().stream()
                         .map(item -> item.getFoodName() + " x" + item.getQuantity())
                         .reduce((a, b) -> a + ", " + b).orElse("No items");
        int total = 0;
        for (CartItem item : fr.getCartItems()) {
            total += item.getPrice();
        }

        model.addRow(new Object[]{sender, items, total, fr.getStatus()});
    }
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblFoodRequests = new javax.swing.JTable();
        btnMarkasProcessed = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        tblFoodRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Items", "Total Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblFoodRequests);

        btnMarkasProcessed.setText("Mark as Processed");
        btnMarkasProcessed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarkasProcessedActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Food Requests");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(btnMarkasProcessed))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnBack)))
                .addContainerGap(203, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btnBack)
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(61, 61, 61)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(btnMarkasProcessed)
                .addContainerGap(121, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnMarkasProcessedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarkasProcessedActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblFoodRequests.getSelectedRow();
    if (selectedRow < 0) {
        JOptionPane.showMessageDialog(this, "Please select a request to mark as processed.");
        return;
    }

    String senderUsername = tblFoodRequests.getValueAt(selectedRow, 0).toString();
    String itemSummary = tblFoodRequests.getValueAt(selectedRow, 1).toString();

    // Loop through food order requests
    for (FoodOrderRequest fr : system.getFoodOrderRequests()) {
        String items = fr.getCartItems().stream()
                         .map(item -> item.getFoodName() + " x" + item.getQuantity())
                         .reduce((a, b) -> a + ", " + b).orElse("No items");

        if (fr.getSender().getusername().equals(senderUsername) &&
            items.equals(itemSummary) &&
            !"Processed".equals(fr.getStatus())) {

            fr.setStatus("Processed");
            fr.setProcessedDate(new Date());  // âœ… Important!
            JOptionPane.showMessageDialog(this, "Marked as processed!");
            populateTable();
            return;
        }
    }

    JOptionPane.showMessageDialog(this, "Matching request not found.", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnMarkasProcessedActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workarea.remove(this);
        ((CardLayout)workarea.getLayout()).previous(workarea);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnMarkasProcessed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblFoodRequests;
    // End of variables declaration//GEN-END:variables
}
